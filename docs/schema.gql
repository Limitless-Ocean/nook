type User @collection(name: "users") {
  redditId: String @unique(index: "unique_reddit_id")
  redditName: String @unique(index: "unique_reddit_name")
  redditIcon: String
  redditDarkmode: Boolean
  discordId: String @unique(index: "unique_discord_id")
  discordName: String
  discordDiscriminator: String
  discordFullName: String
  discordIcon: String
  nintendoName: String
  animalCrossingTag: String
  isActive: Boolean!
  hasHadFirstSync: Boolean
  createdAt: Time!
  updatedAt: Time!
  deletedAt: Time
}

type FishCollection @collection(name: "fishCollection") {
  userId: ID!
  user: User! @relation
  name: String!
  createdAt: Time!
}

type BugCollection @collection(name: "bugCollection") {
  userId: ID!
  user: User! @relation
  name: String!
  createdAt: Time!
}

type FossilCollection @collection(name: "fossilCollection") {
  userId: ID!
  user: User! @relation
  name: String!
  createdAt: Time!
}

type RecipeCollection @collection(name: "recipeCollection") {
  userId: ID!
  user: User! @relation
  name: String!
  createdAt: Time!
}

type ArtCollection @collection(name: "artCollection") {
  userId: ID!
  user: User! @relation
  name: String!
  createdAt: Time!
}

type DeepSeaCollection @collection(name: "deepseaCollection") {
  userId: ID!
  user: User! @relation
  name: String!
  createdAt: Time!
}

type CustomDesign @collection(name: "customDesigns") {
  userId: ID!
  user: User! @relation
  type: String!
  s3Url: String!
  code: String! @unique(index: "unique_code")
  title: String!
  tags: [String!]
  likes: Int!
  createdAt: Time!
  redacted: Boolean!
  redactedReason: String
}

type SavedCustomDesign @collection(name: "savedCustomDesigns") {
  userId: ID!
  customDesignId: ID!
  user: User! @relation
  customDesign: CustomDesign! @relation
}

type SavedUser @collection(name: "savedUsers") {
  userId: ID!
  user: User! @relation
  savedId: ID!
  saved: User! @relation
}

type Query {
  getUsers: [User!]!
  getUserByRedditName(redditName: String): User
  getUserByDiscordName(discordName: String): User
  getUserByDiscordId(discordId: String): User
  getUserByDiscordFullName(discordFullName: String): User
  getFishCollectionByUser(userId: ID): [FishCollection!]!
  getFishCollectionByUserAndName(userId: ID, name: String): FishCollection!
  getBugCollectionByUser(userId: ID): [BugCollection!]!
  getBugCollectionByUserAndName(userId: ID, name: String): BugCollection!
  getFossilCollectionByUser(userId: ID): [FossilCollection!]!
  getFossilCollectionByUserAndName(userId: ID, name: String): FossilCollection!
  getRecipeCollectionByUser(userId: ID): [RecipeCollection!]!
  getRecipeCollectionByUserAndName(userId: ID, name: String): RecipeCollection!
  getArtCollectionByUser(userId: ID): [ArtCollection!]!
  getArtCollectionByUserAndName(userId: ID, name: String): ArtCollection!
  getDeepSeaCollectionByUser(userId: ID): [DeepSeaCollection!]!
  getDeepSeaCollectionByUserAndName(userId: ID, name: String): DeepSeaCollection!
  getCustomDesigns: [CustomDesign!]!
  getCustomDesignsByRedacted(redacted: Boolean): [CustomDesign!]!
  getCustomDesignsByType(type: String, redacted: Boolean): [CustomDesign!]!
  getCustomDesignsByUser(userId: ID, redacted: Boolean): [CustomDesign!]!
  getSavedCustomDesignsByUser(userId: ID): [SavedCustomDesign!]!
  getSavedUsersByUser(userId: ID): [SavedUser!]!
}
